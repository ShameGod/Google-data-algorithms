class Solution {
    HashMap<String, List<String>> hashmap = new HashMap<>(); 
    
    public List<List<String>> groupAnagrams(String[] strs) {
        for(String str : strs){
            List<String> replacementList = new ArrayList<String>();
            String sortedStr = sortString(str);
            if(hashmap.containsKey(sortedStr)){
                replacementList = hashmap.get(sortedStr);
                replacementList.add(str);
                hashmap.put(sortedStr, replacementList);
            }else{
                replacementList.add(str);
                hashmap.put(sortedStr, replacementList);
            }
        }
        
        return hashmapToArray(hashmap);
    }
    
    private List<List<String>> hashmapToArray(HashMap<String, List<String>> hashmap){
        List<List<String>> result = new ArrayList<List<String>>();
        for (Map.Entry<String, List<String>> entry : hashmap.entrySet()) {
            System.out.print("(" + entry.getKey() + "," + entry.getValue() + ") ");
            result.add((List<String>)entry.getValue());
        }
        return result;
    }
    
    private String sortString(String str){  
        char[] chars = str.toCharArray();
        Arrays.sort(chars);
        return new String(chars);
    }
}
